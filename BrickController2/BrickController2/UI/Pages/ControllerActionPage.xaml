<?xml version="1.0" encoding="utf-8" ?>
<local:PageBase
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:controls="clr-namespace:BrickController2.UI.Controls"
    xmlns:converters="clr-namespace:BrickController2.UI.Converters"
    xmlns:creationManagement="clr-namespace:BrickController2.CreationManagement"
    xmlns:extensions="clr-namespace:BrickController2.UI.MarkupExtensions"
    xmlns:gameController="clr-namespace:BrickController2.PlatformServices.GameController"
    xmlns:local="clr-namespace:BrickController2.UI.Pages"
    x:Class="BrickController2.UI.Pages.ControllerActionPage"
    NavigationPage.HasNavigationBar="False"
    BackgroundColor="{DynamicResource PageBackgroundColor}">

    <local:PageBase.Resources>
        <ResourceDictionary>
            <converters:DeviceTypeToChannelOutputVisibleConverter x:Key="DeviceTypeToChannelOutputVisible"/>
        </ResourceDictionary>
    </local:PageBase.Resources>

    <local:PageBase.Content>
        <AbsoluteLayout HorizontalOptions="FillAndExpand" VerticalOptions="FillAndExpand">
            <Grid RowSpacing="0" AbsoluteLayout.LayoutBounds="0, 0, 1, 1" AbsoluteLayout.LayoutFlags="All">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <!-- Navigation bar -->
                <Grid Grid.Row="0" Style="{StaticResource NavigationBarGridStyle}">
                    <StackLayout Orientation="Horizontal" HorizontalOptions="Start">
                        <controls:ImageButton ImageSource="{extensions:ImageResource Source=ic_back_white.png}" Command="{Binding BackCommand}" Style="{StaticResource NavigationBarImageButtonStyle}"/>
                        <Label Text="{extensions:Translate ControllerAction}" Style="{StaticResource NavigationBarLabelStyle}"/>
                    </StackLayout>
                    <StackLayout Orientation="Horizontal" HorizontalOptions="End">
                        <controls:ImageButton ImageSource="{extensions:ImageResource Source=ic_checkmark_white.png}" Command="{Binding SaveControllerActionCommand}" Style="{StaticResource NavigationBarImageButtonStyle}"/>
                    </StackLayout>
                </Grid>

                <!-- Controller action -->
                <ScrollView Grid.Row="1">
                    <StackLayout Orientation="Vertical" Padding="20">

                        <!-- Device selector -->
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="2*"/>
                                <ColumnDefinition Width="3*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <Label Grid.Column="0" Text="{extensions:Translate Device}" VerticalOptions="Center"/>
                            <Picker Grid.Column="1" Title="{extensions:Translate SelectDevice}" ItemsSource="{Binding Devices}" SelectedItem="{Binding SelectedDevice}"/>
                            <controls:FloatingActionButton Grid.Column="2" ButtonColor="Green" ImageSource="{extensions:ImageResource Source=ic_link_white.png}" ImageColor="White" Command="{Binding OpenDeviceDetailsCommand}" VerticalOptions="Center"/>
                        </Grid>

                        <BoxView Style="{StaticResource DividerBoxViewStyle}" Margin="5,8,5,8"/>

                        <!-- Device channel selector -->
                        <controls:DeviceChannelSelector DeviceType="{Binding SelectedDevice.DeviceType}" SelectedChannel="{Binding Action.Channel}"/>

                        <BoxView Style="{StaticResource DividerBoxViewStyle}" Margin="5,8,5,8"/>

                        <!-- Invert switch -->
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="2*"/>
                                <ColumnDefinition Width="3*"/>
                            </Grid.ColumnDefinitions>

                            <Label Grid.Column="0" Text="{extensions:Translate Invert}" VerticalOptions="Center"/>
                            <controls:CheckBox Grid.Column="1" Checked="{Binding Action.IsInvert}" HorizontalOptions="Start"/>
                        </Grid>

                        <BoxView Style="{StaticResource DividerBoxViewStyle}" Margin="5,8,5,8"/>
                        <Label Text="{extensions:Translate AdvancedSettings}" FontSize="Medium" FontAttributes="Bold" Margin="0,5,0,5"/>

                        <StackLayout Orientation="Vertical" IsVisible="{Binding SelectedDevice.DeviceType, Converter={StaticResource DeviceTypeToChannelOutputVisible}}">
                            <!-- Channel output type selector -->
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="2*"/>
                                    <ColumnDefinition Width="3*"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Column="0" Text="{extensions:Translate ChannelType}" VerticalOptions="Center"/>

                                <Grid Grid.Column="1">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    <controls:EnumPicker Grid.Column="0" x:TypeArguments="creationManagement:ChannelOutputType" SelectedItem="{Binding Action.ChannelOutputType}" TextColor="{DynamicResource PrimaryTextColor}"/>
                                    <controls:FloatingActionButton Grid.Column="1" ButtonColor="Green" ImageSource="{extensions:ImageResource Source=ic_settings_white.png}" ImageColor="White" Command="{Binding OpenChannelSetupCommand}" IsVisible="False">
                                        <controls:FloatingActionButton.Triggers>
                                            <DataTrigger TargetType="controls:FloatingActionButton" Binding="{Binding Action.ChannelOutputType}" Value="{x:Static creationManagement:ChannelOutputType.ServoMotor}">
                                                <Setter Property="IsVisible" Value="True"/>
                                            </DataTrigger>
                                        </controls:FloatingActionButton.Triggers>
                                    </controls:FloatingActionButton>
                                </Grid>
                            </Grid>

                            <!-- Max servo angle setting -->
                            <StackLayout Orientation="Vertical" IsVisible="False">
                                <StackLayout.Triggers>
                                    <DataTrigger TargetType="StackLayout" Binding="{Binding Action.ChannelOutputType}" Value="{x:Static creationManagement:ChannelOutputType.ServoMotor}">
                                        <Setter Property="IsVisible" Value="True"/>
                                    </DataTrigger>
                                </StackLayout.Triggers>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="2*"/>
                                        <ColumnDefinition Width="3*"/>
                                    </Grid.ColumnDefinitions>

                                    <Label Grid.Column="0" Text="{extensions:Translate ServoAngle}"/>
                                    <StackLayout Grid.Column="1" Orientation="Horizontal">
                                        <controls:ExtendedSlider Value="{Binding Action.MaxServoAngle}" Minimum="0" Maximum="180" Step="5" HorizontalOptions="FillAndExpand" MinimumTrackColor="LightGray"/>
                                        <Label Text="{Binding Action.MaxServoAngle}" WidthRequest="35" HorizontalOptions="End" HorizontalTextAlignment="End"/>
                                        <Label Text="°"/>
                                    </StackLayout>
                                </Grid>
                            </StackLayout>

                            <!-- Stepper angle setting -->
                            <StackLayout Orientation="Vertical" IsVisible="False">
                                <StackLayout.Triggers>
                                    <DataTrigger TargetType="StackLayout" Binding="{Binding Action.ChannelOutputType}" Value="{x:Static creationManagement:ChannelOutputType.StepperMotor}">
                                        <Setter Property="IsVisible" Value="True"/>
                                    </DataTrigger>
                                </StackLayout.Triggers>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="2*"/>
                                        <ColumnDefinition Width="3*"/>
                                    </Grid.ColumnDefinitions>

                                    <Label Grid.Column="0" Text="{extensions:Translate StepperAngle}"/>
                                    <StackLayout Grid.Column="1" Orientation="Horizontal">
                                        <controls:ExtendedSlider Value="{Binding Action.StepperAngle}" Minimum="0" Maximum="180" Step="5" HorizontalOptions="FillAndExpand" MinimumTrackColor="LightGray"/>
                                        <Label Text="{Binding Action.StepperAngle}" WidthRequest="35" HorizontalOptions="End" HorizontalTextAlignment="End"/>
                                        <Label Text="°"/>
                                    </StackLayout>
                                </Grid>
                            </StackLayout>

                            <BoxView Style="{StaticResource DividerBoxViewStyle}" Margin="5,8,5,8"/>
                        </StackLayout>

                        <!-- Button type selector -->
                        <StackLayout Orientation="Vertical" IsVisible="False">
                            <StackLayout.Triggers>
                                <DataTrigger TargetType="StackLayout" Binding="{Binding ControllerEvent.EventType}" Value="{x:Static gameController:GameControllerEventType.Button}">
                                    <Setter Property="IsVisible" Value="True"/>
                                </DataTrigger>
                            </StackLayout.Triggers>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="2*"/>
                                    <ColumnDefinition Width="3*"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Column="0" Text="{extensions:Translate ButtonType}" VerticalOptions="Center"/>
                                <controls:EnumPicker Grid.Column="1" x:TypeArguments="creationManagement:ControllerButtonType" SelectedItem="{Binding Action.ButtonType}" TextColor="{DynamicResource PrimaryTextColor}"/>
                            </Grid>

                            <!-- Sequence selector -->
                            <StackLayout Orientation="Vertical" IsVisible="False">
                                <StackLayout.Triggers>
                                    <DataTrigger TargetType="StackLayout" Binding="{Binding Action.ButtonType}" Value="{x:Static creationManagement:ControllerButtonType.Sequence}">
                                        <Setter Property="IsVisible" Value="True"/>
                                    </DataTrigger>
                                </StackLayout.Triggers>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="2*"/>
                                        <ColumnDefinition Width="3*"/>
                                    </Grid.ColumnDefinitions>

                                    <Label Grid.Column="0" Text="{extensions:Translate Sequence}" VerticalOptions="Center"/>
                                    <Grid Grid.Column="1">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Picker Grid.Column="0" Title="{extensions:Translate SelectSequence}" ItemsSource="{Binding Sequences}" SelectedItem="{Binding Action.SequenceName}"/>
                                        <controls:FloatingActionButton Grid.Column="1" ButtonColor="Gray" ImageSource="{extensions:ImageResource Source=ic_settings_white.png}" ImageColor="White" Command="{Binding OpenSequenceEditorCommand}" VerticalOptions="Center"/>
                                    </Grid>
                                </Grid>
                            </StackLayout>

                            <BoxView Style="{StaticResource DividerBoxViewStyle}" Margin="5,8,5,8"/>
                        </StackLayout>

                        <!-- Axis type selector -->
                        <StackLayout Orientation="Vertical" IsVisible="False">
                            <StackLayout.Triggers>
                                <DataTrigger TargetType="StackLayout" Binding="{Binding ControllerEvent.EventType}" Value="{x:Static gameController:GameControllerEventType.Axis}">
                                    <Setter Property="IsVisible" Value="True"/>
                                </DataTrigger>
                            </StackLayout.Triggers>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="2*"/>
                                    <ColumnDefinition Width="3*"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Column="0" Text="{extensions:Translate AxisType}" VerticalOptions="Center"/>
                                <controls:EnumPicker Grid.Column="1" x:TypeArguments="creationManagement:ControllerAxisType" SelectedItem="{Binding Action.AxisType}" TextColor="{DynamicResource PrimaryTextColor}"/>
                            </Grid>

                            <BoxView Style="{StaticResource DividerBoxViewStyle}" Margin="5,8,5,8"/>
                        </StackLayout>

                        <!-- Axis characteristic selector -->
                        <StackLayout Orientation="Vertical" IsVisible="False">
                            <StackLayout.Triggers>
                                <DataTrigger TargetType="StackLayout" Binding="{Binding ControllerEvent.EventType}" Value="{x:Static gameController:GameControllerEventType.Axis}">
                                    <Setter Property="IsVisible" Value="True"/>
                                </DataTrigger>
                            </StackLayout.Triggers>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="2*"/>
                                    <ColumnDefinition Width="3*"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Column="0" Text="{extensions:Translate AxisCharacteristic}" VerticalOptions="Center"/>
                                <controls:EnumPicker Grid.Column="1" x:TypeArguments="creationManagement:ControllerAxisCharacteristic" SelectedItem="{Binding Action.AxisCharacteristic}" TextColor="{DynamicResource PrimaryTextColor}"/>
                            </Grid>

                            <BoxView Style="{StaticResource DividerBoxViewStyle}" Margin="5,8,5,8"/>
                        </StackLayout>

                        <!-- Max output percent -->
                        <StackLayout Orientation="Vertical" IsVisible="False">
                            <StackLayout.Triggers>
                                <DataTrigger TargetType="StackLayout" Binding="{Binding Action.ChannelOutputType}" Value="{x:Static creationManagement:ChannelOutputType.NormalMotor}">
                                    <Setter Property="IsVisible" Value="True"/>
                                </DataTrigger>
                            </StackLayout.Triggers>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="2*"/>
                                    <ColumnDefinition Width="3*"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Column="0" Text="{extensions:Translate MaxOutput}"/>
                                <StackLayout Grid.Column="1" Orientation="Horizontal">
                                    <Slider Value="{Binding Action.MaxOutputPercent}" Minimum="0" Maximum="100" HorizontalOptions="FillAndExpand" MinimumTrackColor="LightGray"/>
                                    <Label Text="{Binding Action.MaxOutputPercent}" WidthRequest="35" HorizontalOptions="End" HorizontalTextAlignment="End"/>
                                    <Label Text="%"/>
                                </StackLayout>
                            </Grid>

                            <BoxView Style="{StaticResource DividerBoxViewStyle}" Margin="5,8,5,8"/>
                        </StackLayout>

                        <!-- Axis dead zone percent -->
                        <StackLayout Orientation="Vertical" IsVisible="False">
                            <StackLayout.Triggers>
                                <DataTrigger TargetType="StackLayout" Binding="{Binding ControllerEvent.EventType}" Value="{x:Static gameController:GameControllerEventType.Axis}">
                                    <Setter Property="IsVisible" Value="True"/>
                                </DataTrigger>
                            </StackLayout.Triggers>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="2*"/>
                                    <ColumnDefinition Width="3*"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Column="0" Text="{extensions:Translate AxisDeadZone}"/>
                                <StackLayout Grid.Column="1" Orientation="Horizontal">
                                    <Slider Value="{Binding Action.AxisDeadZonePercent}" Minimum="0" Maximum="100" HorizontalOptions="FillAndExpand" MinimumTrackColor="LightGray"/>
                                    <Label Text="{Binding Action.AxisDeadZonePercent}" WidthRequest="35" HorizontalOptions="End" HorizontalTextAlignment="End"/>
                                    <Label Text="%"/>
                                </StackLayout>
                            </Grid>

                            <BoxView Style="{StaticResource DividerBoxViewStyle}" Margin="5,8,5,8"/>
                        </StackLayout>

                    </StackLayout>
                </ScrollView>

            </Grid>

            <controls:Dialogs x:Name="Dialogs" AbsoluteLayout.LayoutBounds="0, 0, 1, 1" AbsoluteLayout.LayoutFlags="All"/>

        </AbsoluteLayout>
    </local:PageBase.Content>
</local:PageBase>